{
  "hash": "075bd72c35268d69481519c54f6383bf",
  "result": {
    "markdown": "---\ntitle: \"Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan\"\nsubtitle: \"Take-home_Ex02\"\nformat:\n  html:\n    code-fold: false\n    code-summary: \"Show the code\"\n    toc: true # Table of Contents\nexecute:\n  eval: true\n  echo: true\n  freeze: true\n  warning: False  # This turns off warning messages being displayed\ndate: 19 February, 2024\ndate-modified: \"last-modified\"\n---\n\n\n# 1.0 Introduction\n\n## 1.1 Overview\n\n[Dengue Hemorrhagic Fever](https://www.cdc.gov/dengue/resources/denguedhf-information-for-health-care-practitioners_2009.pdf) (in short dengue fever) is one of the most widespread mosquito-borne diseases in the most tropical and subtropical regions. It is an acute disease caused by dengue virus infection which is transmitted by female Aedes aegypti and Aedes albopictus mosquitoes. In 2015, Taiwan had recorded the most severe dengue fever outbreak with more than 43,000 dengue cases and 228 deaths. Since then, the annual reported dengue fever cases were maintained at the level of not more than 200 cases. However, in 2023, Taiwan recorded 26703 dengue fever cases.\n\n## 1.2 Objectives\n\nAs a curious geospatial analytics green horn, you are interested to discover:\n\n-   if the distribution of dengue fever outbreak at Tainan City, Taiwan are independent from space and space and time.\n\n-   If the outbreak is indeed spatial and spatio-temporal dependent, then, you would like to detect where are the clusters and outliers, and the emerging hot spot/cold spot areas.\n\n## 1.3 The Task\n\nThe specific tasks of this take-home exercise are as follows:\n\n-   Using appropriate function of **sf** and **tidyverse**, preparing the following geospatial data layer:\n\n    -   a study area layer in sf polygon features. It must be at village level and confined to the D01, D02, D04, D06, D07, D08, D32 and D39 counties of Tainan City, Taiwan.\n\n    -   a dengue fever layer within the study area in sf point features. The dengue fever cases should be confined to epidemiology week 31-50, 2023.\n\n    -   a derived dengue fever layer in [spacetime s3 class of sfdep](https://sfdep.josiahparry.com/articles/spacetime-s3). It should contain, among many other useful information, a data field showing number of dengue fever cases by village and by epidemiology week.\n\n-   Using the extracted data, perform global spatial autocorrelation analysis by using [sfdep methods](https://is415-gaa-tskam.netlify.app/in-class_ex/in-class_ex05/in-class_ex05-glsa).\n\n-   Using the extracted data, perform local spatial autocorrelation analysis by using [sfdep methods](https://r4gdsa.netlify.app/chap10.html).\n\n-   Using the extracted data, perform emerging hotspot analysis by using [sfdep methods](https://is415-gaa-tskam.netlify.app/in-class_ex/in-class_ex05/in-class_ex05-ehsa).\n\n-   Describe the spatial patterns revealed by the analysis above.\n\n# 2.0 Packages\n\nThe packages used in this project are:\n\n-   **sf:** for importing, managing, and processing geospatial data\n\n-   **tidyverse**: a family of R packages for performing data science tasks such as importing, wrangling, and visualizing data\n\n-   **tmap:** creating thematic maps\n\n-   **sfdep:** for analyzing spatial dependencies\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, tidyverse, tmap, sfdep, dplyr)\n```\n:::\n\n\n# 3.0 Data Acquisition\n\nFor the purpose of this take-home exercise, two data sets are provided, they are:\n\n+---------------------+--------+---------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------+\n| Data                | Format | Description                                                                                                               | Source                                                                                                              |\n+=====================+========+===========================================================================================================================+=====================================================================================================================+\n| TAIWAN_VILLAGE_2020 | ESRI   | A Geospatial data of village boundary of Taiwan. The data is in Taiwan Geographic Coordinate System.                      | [Historical map data of the village boundary: TWD97 longitude and latitude](https://data.gov.tw/en/datasets/130549) |\n+---------------------+--------+---------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------+\n| Dengue_Daily.csv    | CSV    | An Aspatial data of reported dengue cases in Taiwan since 1998. Below are selected fields that are useful for this study: | [Dengue Daily Confirmed Cases Since 1998](https://data.cdc.gov.tw/en/dataset/dengue-daily-determined-cases-1998)    |\n|                     |        |                                                                                                                           |                                                                                                                     |\n|                     |        | -   發病日: Onset date                                                                                                    |                                                                                                                     |\n|                     |        |                                                                                                                           |                                                                                                                     |\n|                     |        | -   最小統計區中心點X: x-coordinate                                                                                       |                                                                                                                     |\n|                     |        |                                                                                                                           |                                                                                                                     |\n|                     |        | -   最小統計區中心點Y: y-coordinate                                                                                       |                                                                                                                     |\n+---------------------+--------+---------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------+\n\n# 4.0 Data Wrangling\n\nCan reference In-Class_Ex05\n\n## 4.1 Importing Taiwan Boundary dataset\n\nLet's see what layers the dataset has.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfile_path = \"../../data/geospatial/TAIWAN_VILLAGE_2020\"\nlayers <- st_layers(file_path)\nprint(layers)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nDriver: ESRI Shapefile \nAvailable layers:\n      layer_name geometry_type features fields crs_name\n1 TAINAN_VILLAGE       Polygon      649     10    TWD97\n```\n:::\n:::\n\n\nSince it only has one \"TAINAN_VILLAGE\" layer, lets pull it.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntaiwan_sf <- st_read(dsn=\"../../data/geospatial/TAIWAN_VILLAGE_2020\", layer=\"TAINAN_VILLAGE\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `TAINAN_VILLAGE' from data source \n  `C:\\russelltjh\\IS415-GAA\\data\\geospatial\\TAIWAN_VILLAGE_2020' \n  using driver `ESRI Shapefile'\nSimple feature collection with 649 features and 10 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 120.0269 ymin: 22.88751 xmax: 120.6563 ymax: 23.41374\nGeodetic CRS:  TWD97\n```\n:::\n:::\n\n\nTake note that this dataset is in TWD97 Geographic Coordinate System.\n\n### 4.1.1 Extracting Polygon Study Area\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(taiwan_sf,1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 1 feature and 10 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 120.2695 ymin: 22.93251 xmax: 120.2905 ymax: 22.96072\nGeodetic CRS:  TWD97\n     VILLCODE COUNTYNAME TOWNNAME VILLNAME     VILLENG COUNTYID COUNTYCODE\n1 67000280002     臺南市   歸仁區   六甲里 Liujia Vil.        D      67000\n  TOWNID TOWNCODE NOTE                       geometry\n1    D33 67000280 <NA> POLYGON ((120.2725 22.95868...\n```\n:::\n:::\n\n\nWe are interested in the \"TOWNID\" column. Specifically the D01, D02, D04, D06, D07, D08, D32 and D39 counties of Tainan City, Taiwan.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Assuming taiwan_sf is your imported sf object\nstudy_area_sf <- taiwan_sf %>%\n  filter(TOWNID %in% c(\"D01\", \"D02\", \"D04\", \"D06\", \"D07\", \"D08\", \"D32\", \"D39\"))\n\n# Check the result\nprint(unique(study_area_sf$TOWNID))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"D06\" \"D32\" \"D08\" \"D02\" \"D39\" \"D01\" \"D04\" \"D07\"\n```\n:::\n:::\n\n\n## 4.2 Importing Dengue Daily dataset\n\nThis dataset contains the dengue cases in 2020 and is in TWD97 Geographic Coordinate System.\n\nThe data is in a geographic coordinate system with longitude and latitude, even though it is in decimal. It is not Projected Coordinate System.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue2023 <- read_csv(\"../../data/aspatial/DengueDaily/Dengue_Daily.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(dengue2023)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     發病日            個案研判日            通報日          \n Min.   :1998-01-02   Length:106861      Min.   :1998-01-07  \n 1st Qu.:2014-10-28   Class :character   1st Qu.:2014-10-31  \n Median :2015-09-29   Mode  :character   Median :2015-10-01  \n Mean   :2016-03-31                      Mean   :2016-04-03  \n 3rd Qu.:2023-06-19                      3rd Qu.:2023-06-23  \n Max.   :2024-01-29                      Max.   :2024-01-29  \n     性別              年齡層            居住縣市           居住鄉鎮        \n Length:106861      Length:106861      Length:106861      Length:106861     \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n   居住村里          最小統計區        最小統計區中心點X  最小統計區中心點Y \n Length:106861      Length:106861      Length:106861      Length:106861     \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n  一級統計區         二級統計區          感染縣市           感染鄉鎮        \n Length:106861      Length:106861      Length:106861      Length:106861     \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n   感染村里         是否境外移入         感染國家           確定病例數\n Length:106861      Length:106861      Length:106861      Min.   :1   \n Class :character   Class :character   Class :character   1st Qu.:1   \n Mode  :character   Mode  :character   Mode  :character   Median :1   \n                                                          Mean   :1   \n                                                          3rd Qu.:1   \n                                                          Max.   :2   \n 居住村里代碼       感染村里代碼          血清型          內政部居住縣市代碼\n Length:106861      Length:106861      Length:106861      Length:106861     \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n 內政部居住鄉鎮代碼 內政部感染縣市代碼 內政部感染鄉鎮代碼\n Length:106861      Length:106861      Length:106861     \n Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character  \n                                                         \n                                                         \n                                                         \n```\n:::\n:::\n\n\n### 4.2.1 Extract Study Area\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# First, convert '發病日' to Date format\ndengue2023 <- dengue2023 %>%\n  mutate(發病日期 = ymd(發病日))\n\n# Then, add a column for the epidemiological week and year\ndengue2023 <- dengue2023 %>%\n  mutate(\n    EPID_WEEK = isoweek(發病日期),\n    EPID_YEAR = year(發病日期)\n  )\n\n# Now, filter the data for epidemiological weeks 31-50 in 2023\ndengue_week31_50_2023 <- dengue2023 %>%\n  filter(EPID_YEAR == 2023 & EPID_WEEK >= 31 & EPID_WEEK <= 50)\n\n# Check the result\nprint(dengue_week31_50_2023)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 25,480 × 29\n   發病日     個案研判日 通報日     性別  年齡層 居住縣市 居住鄉鎮 居住村里\n   <date>     <chr>      <date>     <chr> <chr>  <chr>    <chr>    <chr>   \n 1 2023-07-31 2023/07/31 2023-07-31 女    30-34  台南市   永康區   埔園里  \n 2 2023-07-31 2023/07/31 2023-07-31 男    55-59  台南市   東區     大智里  \n 3 2023-07-31 2023/07/31 2023-07-31 男    5-9    台南市   永康區   五王里  \n 4 2023-07-31 2023/07/31 2023-07-31 男    70+    台南市   仁德區   成功里  \n 5 2023-07-31 2023/07/31 2023-07-31 男    55-59  台南市   永康區   中興里  \n 6 2023-07-31 2023/07/31 2023-07-31 男    30-34  雲林縣   古坑鄉   高林村  \n 7 2023-07-31 2023/07/31 2023-07-31 女    40-44  台南市   永康區   復華里  \n 8 2023-07-31 2023/08/01 2023-08-01 女    30-34  台南市   仁德區   仁德里  \n 9 2023-07-31 2023/08/01 2023-08-01 男    70+    雲林縣   古坑鄉   荷苞村  \n10 2023-07-31 2023/08/01 2023-08-01 男    15-19  台南市   東區     崇善里  \n# ℹ 25,470 more rows\n# ℹ 21 more variables: 最小統計區 <chr>, 最小統計區中心點X <chr>,\n#   最小統計區中心點Y <chr>, 一級統計區 <chr>, 二級統計區 <chr>,\n#   感染縣市 <chr>, 感染鄉鎮 <chr>, 感染村里 <chr>, 是否境外移入 <chr>,\n#   感染國家 <chr>, 確定病例數 <dbl>, 居住村里代碼 <chr>, 感染村里代碼 <chr>,\n#   血清型 <chr>, 內政部居住縣市代碼 <chr>, 內政部居住鄉鎮代碼 <chr>,\n#   內政部感染縣市代碼 <chr>, 內政部感染鄉鎮代碼 <chr>, 發病日期 <date>, …\n```\n:::\n:::\n\n\n### 4.2.2 Drop Unnecessary Columns\n\nIn the Data Acquisition section, we mentioned that we only need these columns for the analysis:\n\n-   發病日: Onset date\n\n    -   Since in the above processing, we created a new field called (發病日期) with the modified date object, we will use that instead.\n\n-   最小統計區中心點X: x-coordinate\n\n-   最小統計區中心點Y: y-coordinate\n\nLet's keep only these 3 columns:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Select only the necessary columns\ndengue_cases <- dengue_week31_50_2023 %>%\n  select(發病日期, 最小統計區中心點X, 最小統計區中心點Y)\n\n# Check the result\nprint(dengue_cases)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 25,480 × 3\n   發病日期   最小統計區中心點X 最小統計區中心點Y\n   <date>     <chr>             <chr>            \n 1 2023-07-31 120.253752333     23.031699814     \n 2 2023-07-31 120.232374917     22.962366283     \n 3 2023-07-31 120.235733496     23.013083716     \n 4 2023-07-31 120.225744179     22.957479956     \n 5 2023-07-31 120.236501733     23.004533744     \n 6 2023-07-31 120.569102533     23.671263060     \n 7 2023-07-31 120.248094155     23.014554416     \n 8 2023-07-31 120.251073582     22.971075521     \n 9 2023-07-31 120.584381057     23.668717366     \n10 2023-07-31 120.231829094     22.972059640     \n# ℹ 25,470 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(is.na(dengue_cases$最小統計區中心點X))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0\n```\n:::\n\n```{.r .cell-code}\nsum(is.na(dengue_cases$最小統計區中心點Y))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0\n```\n:::\n:::\n\n\n## 4.3 Derive a Dengue Fever Layer in spacetime s3 class of sfdep\n\n1.  **Spatial Join**:\n\n    -   Perform a spatial join between the **`dengue_cases`** points and the **`study_area_sf`** polygons to determine which dengue cases occur in which village.\n\n2.  **Date Conversion**:\n\n    -   Convert the '發病日期' to an epidemiological week.\n\n3.  **Aggregation**:\n\n    -   Aggregate the cases by the 'VILLCODE' (village code) and epidemiological week.\n\n4.  **sfdep Object Creation**:\n\n    -   Create an **`s3`** class object suitable for the **`sfdep`** package, which will allow for the analysis of spatial and spatio-temporal patterns.\n\n\n::: {.cell}\n\n:::\n\n\n# 5.0 Global Measures of Spatial Association (Ex05)\n\n[is415-gaa-tskam.netlify.app/in-class_ex/in-class_ex05/in-class_ex05-glsa](https://is415-gaa-tskam.netlify.app/in-class_ex/in-class_ex05/in-class_ex05-glsa)\n\nDeriving contiguity weights: Queen's method\n\nThen draw a bunch of choropleth map\n\nwhen using sfdep, the wm_q will be saved as dataframe. This means we can just look at the neighbors by looking directly at the dataset (like the in-class exercise), instead of only being able to look at it after printing (like the hands-on exercise)\n\nMoran I test statistics: use p-value to compare with critical value to reject or accept null hypothesis. (usually using 95% -\\> alpha value = 0.05 or 90% -\\> alpha value = 0.1)\n\n-   Reject Null Hypothesis if p-value \\< critical value -\\> inferred .... represents clustering\n\nIs there a spacial bias-ness? Test its distribution (like Complete Spatial Randomness, or does it have some clustering). The null hypothesis is that it resembles CSR.\n\nThis stuff is called Frequentist test because we only take one result. But in the modern data science world, we don't use this because it's not enough, instead we use monte-carlo simulation to test it multiple times. For this assignment, we can just use monte carlo.\n\nglobal_moran_perm(wm_q\\$GDPPC, wm_q\\$nb, wm_q\\$wt, nsim = 99)\n\nCorrect method to use is always permutation method.\n\nMOVING ON\n\nlocal moran is a decomposition of moran, so we can detect specific cluster outliers\n\n-   Outlier =\\> different from neighbors (high-low, low-high)\n\n-   Clusters =\\> similar to neighbors (high-high, low-low)\n\nWe can plot the p-value for each region\n\nlisa_sig \\<- lisa %\\>% filter(p_ii \\< 0.05) tmap_mode(\"plot\") .......................\n\nMOVING ON\n\nGi\\* statistics, it needs to be in distance based metrics\n\nGi\\* statistics defines everything as a cluster and tells us if its a hotspot or coldspot cluster\n\ncan use fixed distance, adaptive distance or inverse distance (like in-class ex)\n\nThe graph from GI will have positive and negative\n\n-   positive = hotspot\n\n-   negative = coldspot\n\nMOVING ON\n\nwe can combine both, the statistically significant areas from local moran and the hotspot/coldspot from Gi\\* statistics\n\nFOR THIS TAKE HOME ASSIGNMENT, we need to decide which one to use, and see if we need both or just one\n\nMOVING ON\n\nSPATIAL TIME CUBE\n\neach cube represents one geographical area.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}