{
  "hash": "28a7bd6ecb0f0de2c5af7ec6c60874a0",
  "result": {
    "markdown": "---\ntitle: \"Geographically Weighted Predictive Models\"\nsubtitle: \"In-class Exercise 9\"\nexecute:\n  eval: true\n  echo: true\n  freeze: true\n  warning: False  # This turns off warning messages being displayed\ndate: 17 March, 2024\ndate-modified: \"last-modified\"\n---\n\n\n# Installing and Loading R packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, spdep, GWmodel, \n               SpatialML, tmap, \n               tidymodels, tidyverse, \n               gtsummary, \n               rpart, rpart.plot, \n               ggstatsplot, performance)\n```\n:::\n\n\n# Preparing Data\n\n## Reading Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrs_sf <- read_rds(\"data/rds/HDB_resale.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrs_sf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 15901 features and 17 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 11597.31 ymin: 28217.39 xmax: 42623.63 ymax: 48741.06\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 15,901 × 18\n   RESALE_PRICE FLOOR_AREA_SQM STOREY_ORDER REMAINING_LEASE_MTHS PROX_CBD\n          <dbl>          <dbl>        <int>                <dbl>    <dbl>\n 1       330000             92            1                  684     8.82\n 2       360000             91            3                  738     9.84\n 3       370000             92            1                  733     9.56\n 4       375000             99            2                  700     9.61\n 5       380000             92            2                  715     8.35\n 6       380000             92            4                  732     9.49\n 7       385000             92            3                  706     8.96\n 8       395000             92            2                  745     9.81\n 9       395000             93            4                  731    10.3 \n10       395000             91            3                  725    10.4 \n# ℹ 15,891 more rows\n# ℹ 13 more variables: PROX_ELDERLYCARE <dbl>, PROX_HAWKER <dbl>,\n#   PROX_MRT <dbl>, PROX_PARK <dbl>, PROX_GOOD_PRISCH <dbl>, PROX_MALL <dbl>,\n#   PROX_CHAS <dbl>, PROX_SUPERMARKET <dbl>, WITHIN_350M_KINDERGARTEN <int>,\n#   WITHIN_350M_CHILDCARE <int>, WITHIN_350M_BUS <int>,\n#   WITHIN_1KM_PRISCH <int>, geometry <POINT [m]>\n```\n:::\n:::\n\n\n## Data Sampling\n\nWe will split the data into 50% training and 50% testing.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234) # Set seed to keep the sample consistent\nresale_split <- initial_split(\n  rs_sf,\n  prop=5/10,)\ntrain_sf <- training(resale_split)\ntest_sf <- testing(resale_split)\n```\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\nFrom simple feature object, we drop the geometry, turning it into a tibble data.frame. We then turn it into a normal base R dataframe.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrain_df <- train_sf %>%\n  st_drop_geometry() %>%\n  as.data.frame()\n\ntest_df <- test_sf %>%\n  st_drop_geometry() %>%\n  as.data.frame()\n```\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n# EDA\n\n## Computing Correlation Matrix\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrs_df <- rs_sf %>%\n  st_drop_geometry() %>%\n  as.data.frame()\n\nggcorrmat(rs_df[,2:17])\n```\n\n::: {.cell-output-display}\n![](In-class_Ex09_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n# Building a non-spatial multiple linear regression\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprice_mlr <- lm(RESALE_PRICE ~ \n                  FLOOR_AREA_SQM +\n                  STOREY_ORDER + \n                  REMAINING_LEASE_MTHS +\n                  PROX_CBD + \n                  PROX_ELDERLYCARE + \n                  PROX_HAWKER +\n                  PROX_MRT + \n                  PROX_PARK + \n                  PROX_GOOD_PRISCH + \n                  PROX_MALL + \n                  PROX_CHAS +\n                  PROX_SUPERMARKET + \n                  WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + \n                  WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH,\n                data=train_df)\nsummary(price_mlr)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = RESALE_PRICE ~ FLOOR_AREA_SQM + STOREY_ORDER + REMAINING_LEASE_MTHS + \n    PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK + \n    PROX_GOOD_PRISCH + PROX_MALL + PROX_CHAS + PROX_SUPERMARKET + \n    WITHIN_350M_KINDERGARTEN + WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + \n    WITHIN_1KM_PRISCH, data = train_df)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-187332  -39309   -1965   35953  312626 \n\nCoefficients:\n                           Estimate Std. Error t value Pr(>|t|)    \n(Intercept)              105360.313  11968.953   8.803  < 2e-16 ***\nFLOOR_AREA_SQM             2802.967    103.228  27.153  < 2e-16 ***\nSTOREY_ORDER              14044.146    383.517  36.619  < 2e-16 ***\nREMAINING_LEASE_MTHS        345.020      5.196  66.405  < 2e-16 ***\nPROX_CBD                 -17918.468    263.037 -68.122  < 2e-16 ***\nPROX_ELDERLYCARE         -14468.531   1124.109 -12.871  < 2e-16 ***\nPROX_HAWKER              -17100.772   1459.316 -11.718  < 2e-16 ***\nPROX_MRT                 -31603.320   1961.445 -16.112  < 2e-16 ***\nPROX_PARK                 -9334.205   1705.204  -5.474 4.54e-08 ***\nPROX_GOOD_PRISCH           2787.434    383.317   7.272 3.88e-13 ***\nPROX_MALL                -12319.686   2273.741  -5.418 6.20e-08 ***\nPROX_CHAS                 -9057.322   7198.516  -1.258    0.208    \nPROX_SUPERMARKET         -25758.080   5057.112  -5.093 3.60e-07 ***\nWITHIN_350M_KINDERGARTEN   8706.680    719.253  12.105  < 2e-16 ***\nWITHIN_350M_CHILDCARE     -4536.914    398.135 -11.395  < 2e-16 ***\nWITHIN_350M_BUS            1067.280    252.318   4.230 2.36e-05 ***\nWITHIN_1KM_PRISCH         -8192.393    553.062 -14.813  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 60850 on 7933 degrees of freedom\nMultiple R-squared:  0.7423,\tAdjusted R-squared:  0.7417 \nF-statistic:  1428 on 16 and 7933 DF,  p-value: < 2.2e-16\n```\n:::\n:::\n\n\n## Revising mlr model\n\nWe want to remove PROX_CHAS because it doesn't make sense logically to predict resale price with this variable.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrain_df <- train_df %>%\n  select(-c(PROX_CHAS)) # exclude this variable\ntest_df <- test_df %>%\n  select(-c(PROX_CHAS))\ntrain_sf <- train_sf %>%\n  select(-c(PROX_CHAS))\ntest_sf <- test_sf %>%\n  select(-c(PROX_CHAS))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprice_mlr <- lm(RESALE_PRICE ~ \n                  FLOOR_AREA_SQM +\n                  STOREY_ORDER + \n                  REMAINING_LEASE_MTHS +\n                  PROX_CBD + \n                  PROX_ELDERLYCARE + \n                  PROX_HAWKER +\n                  PROX_MRT + \n                  PROX_PARK + \n                  PROX_GOOD_PRISCH + \n                  PROX_MALL +\n                  PROX_SUPERMARKET + \n                  WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + \n                  WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH,\n                data=train_df)\nsummary(price_mlr)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = RESALE_PRICE ~ FLOOR_AREA_SQM + STOREY_ORDER + REMAINING_LEASE_MTHS + \n    PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK + \n    PROX_GOOD_PRISCH + PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN + \n    WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH, \n    data = train_df)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-186791  -39185   -2118   35951  313259 \n\nCoefficients:\n                           Estimate Std. Error t value Pr(>|t|)    \n(Intercept)              105081.249  11967.337   8.781  < 2e-16 ***\nFLOOR_AREA_SQM             2790.633    102.766  27.155  < 2e-16 ***\nSTOREY_ORDER              14037.646    383.497  36.604  < 2e-16 ***\nREMAINING_LEASE_MTHS        345.614      5.174  66.794  < 2e-16 ***\nPROX_CBD                 -17906.932    262.886 -68.117  < 2e-16 ***\nPROX_ELDERLYCARE         -14587.598   1120.160 -13.023  < 2e-16 ***\nPROX_HAWKER              -17434.105   1435.120 -12.148  < 2e-16 ***\nPROX_MRT                 -31752.019   1957.953 -16.217  < 2e-16 ***\nPROX_PARK                 -9365.814   1705.082  -5.493 4.08e-08 ***\nPROX_GOOD_PRISCH           2757.600    382.597   7.208 6.22e-13 ***\nPROX_MALL                -12219.544   2272.431  -5.377 7.78e-08 ***\nPROX_SUPERMARKET         -28048.965   4718.151  -5.945 2.88e-09 ***\nWITHIN_350M_KINDERGARTEN   8721.544    719.183  12.127  < 2e-16 ***\nWITHIN_350M_CHILDCARE     -4515.186    397.774 -11.351  < 2e-16 ***\nWITHIN_350M_BUS            1083.952    251.979   4.302 1.71e-05 ***\nWITHIN_1KM_PRISCH         -8200.760    553.042 -14.828  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 60850 on 7934 degrees of freedom\nMultiple R-squared:  0.7422,\tAdjusted R-squared:  0.7417 \nF-statistic:  1523 on 15 and 7934 DF,  p-value: < 2.2e-16\n```\n:::\n:::\n\n\n# ...\n\nExtract the x,y coordinates of the full, training and test data sets.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncoords <- st_coordinates(rs_sf)\ncoords_train <- st_coordinates(train_sf)\ncoords_test <- st_coordinates(test_sf)\n```\n:::\n\n\nCreate recursive partitioning\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nrs_rp <- rpart(\n  formula = RESALE_PRICE ~ \n                  FLOOR_AREA_SQM +\n                  STOREY_ORDER + \n                  REMAINING_LEASE_MTHS +\n                  PROX_CBD + \n                  PROX_ELDERLYCARE + \n                  PROX_HAWKER +\n                  PROX_MRT + \n                  PROX_PARK + \n                  PROX_GOOD_PRISCH + \n                  PROX_MALL +\n                  PROX_SUPERMARKET + \n                  WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + \n                  WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH,\n                  data=train_df)\nrs_rp\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nn= 7950 \n\nnode), split, n, deviance, yval\n      * denotes terminal node\n\n 1) root 7950 1.139546e+14 433705.6  \n   2) PROX_CBD>=7.974483 6665 4.472144e+13 403736.0  \n     4) REMAINING_LEASE_MTHS< 1020.5 4228 1.573100e+13 370187.4  \n       8) PROX_GOOD_PRISCH>=3.629405 2271 3.851141e+12 340796.1 *\n       9) PROX_GOOD_PRISCH< 3.629405 1957 7.641480e+12 404294.6 *\n     5) REMAINING_LEASE_MTHS>=1020.5 2437 1.597594e+13 461940.1  \n      10) PROX_CBD>=10.40657 2331 9.762718e+12 451754.4  \n        20) PROX_GOOD_PRISCH>=4.866983 1123 2.801796e+12 423493.8 *\n        21) PROX_GOOD_PRISCH< 4.866983 1208 5.230246e+12 478026.4 *\n      11) PROX_CBD< 10.40657 106 6.532500e+11 685929.1 *\n   3) PROX_CBD< 7.974483 1285 3.219685e+13 589151.4  \n     6) REMAINING_LEASE_MTHS< 930.5 745 6.613365e+12 486637.6  \n      12) FLOOR_AREA_SQM< 98.5 451 2.446537e+12 442460.5 *\n      13) FLOOR_AREA_SQM>=98.5 294 1.936449e+12 554405.7 *\n     7) REMAINING_LEASE_MTHS>=930.5 540 6.952722e+12 730582.5  \n      14) REMAINING_LEASE_MTHS< 1071.5 314 2.461969e+12 676641.3 *\n      15) REMAINING_LEASE_MTHS>=1071.5 226 2.307737e+12 805527.4 *\n```\n:::\n:::\n\n\nLet's visualize the recursive partitioning\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrpart.plot(rs_rp)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex09_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nrs_rf <- ranger(\n  formula = RESALE_PRICE ~ \n                  FLOOR_AREA_SQM +\n                  STOREY_ORDER + \n                  REMAINING_LEASE_MTHS +\n                  PROX_CBD + \n                  PROX_ELDERLYCARE + \n                  PROX_HAWKER +\n                  PROX_MRT + \n                  PROX_PARK + \n                  PROX_GOOD_PRISCH + \n                  PROX_MALL +\n                  PROX_SUPERMARKET + \n                  WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + \n                  WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH,\n                  data=train_df,\n                  importance=\"impurity\") # need this line to get the variable importance in the output\nrs_rf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRanger result\n\nCall:\n ranger(formula = RESALE_PRICE ~ FLOOR_AREA_SQM + STOREY_ORDER +      REMAINING_LEASE_MTHS + PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +      PROX_MRT + PROX_PARK + PROX_GOOD_PRISCH + PROX_MALL + PROX_SUPERMARKET +      WITHIN_350M_KINDERGARTEN + WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +      WITHIN_1KM_PRISCH, data = train_df, importance = \"impurity\") \n\nType:                             Regression \nNumber of trees:                  500 \nSample size:                      7950 \nNumber of independent variables:  15 \nMtry:                             3 \nTarget node size:                 5 \nVariable importance mode:         impurity \nSplitrule:                        variance \nOOB prediction error (MSE):       738005688 \nR squared (OOB):                  0.9485198 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nvi <- as.data.frame(rs_rf$variable.importance)\nvi$variables <- rownames(vi) # make it two columns, vi and variable name\nvi <- vi %>% \n    rename(vi = \"rs_rf$variable.importance\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = vi,\n       aes(x=vi,\n           y=reorder(variables, vi))) + # reorder() sorts the variables based on vi\n  geom_bar(stat=\"identity\")\n```\n\n::: {.cell-output-display}\n![](In-class_Ex09_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n# Compare Model Performance\n\n### Saving predicted output of geographically weighted random forest and preparing final data table\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngrf_pred <- read_rds(\"data/models/grf_pred.rds\")\ngrf_pred_df <- as.data.frame(grf_pred)\n```\n:::\n\n\ncbind() is used to append the predicted values onto the test_df\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_pred <- test_df %>%\n  select(RESALE_PRICE) %>%\n  cbind(grf_pred_df)\n```\n:::\n\n\n### Saving predicted output of random forest and preparing final data table\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrf_pred <- predict(rs_rf, test_df)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrf_pred_df <- as.data.frame(rf_pred$predictions) %>%\n  rename(rf_pred = \"rf_pred$predictions\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_pred <- cbind(test_pred,rf_pred_df)\n```\n:::\n\n\n### Saving predicted output of multiple linear regression and preparing final data table\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrs_mlr <- read_rds(\"data/models/rs_mlr.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmlr_pred <- predict(rs_mlr, test_df)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmlr_pred_df <- as.data.frame(mlr_pred) %>%\n  rename(mlr_pred = \"mlr_pred\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_pred <- cbind(test_pred,\n                   mlr_pred_df)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nyardstick::rmse(test_pred,\n                RESALE_PRICE,\n                mlr_pred)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  <chr>   <chr>          <dbl>\n1 rmse    standard      61617.\n```\n:::\n:::\n\n\nTranspose the table\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc <- test_pred %>%\n  pivot_longer (cols = c(2:4),\n                names_to = \"models\",\n                values_to = \"predicted\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmc %>%\n  group_by(models) %>%\n  yardstick::rmse(RESALE_PRICE,\n                  predicted)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 4\n  models   .metric .estimator .estimate\n  <chr>    <chr>   <chr>          <dbl>\n1 grf_pred rmse    standard      28745.\n2 mlr_pred rmse    standard      61617.\n3 rf_pred  rmse    standard      28348.\n```\n:::\n:::\n",
    "supporting": [
      "In-class_Ex09_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}